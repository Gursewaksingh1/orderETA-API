const mongoose = require("mongoose");
const Schema = mongoose.Schema;
const storeSchema = new Schema({
  _id: {
    required: true,
    type: String,
  },

  store_id: Number,
  store_phone: String,
  store_address: String,
  store_name: String,
  ACL: {},
  _metadata: Object,
  store_username: String,
  store_password: String,
  store_email: String,
  store_location: Array,
  is_admin: Number,
  is_testing: Number,
  store_name_for_text: String,
  notify_by_phone: Number,
  delivery_text_confirmation: Number,
  barcode_type: String,
  store_admin_email: String,
  store_code: String,
  zones_array: Array,
  shifts_array: Array,
  has_cases: Number,
  notify_manager_driver_return: Number,
  manager_phone: String,
  marker_shows: String,
  nexmo_num: String,
  notify_customer_delivery_success: Number,
  notify_by_sms: Number,
  text_back_custom_message: String,
  manager_phone2: String,
  notify_if_cod: Number,
  display_balances: Number,
  request_signature: Number,
  sms_on_order_creation: Number,
  call_start_timeofday: Number,
  call_end_timeofday: Number,
  show_yesterdays_orders_too: Number,
  notify_customer_delivery_prior: Number,
  notify_cod_delivery_prior: Number,
  cod_enforced: Number,
  default_city: String,
  default_state: String,
  default_zip: String,
  confirm_orders_no_swipe: Number,
  check_orders_against_correct_drivers: Number,
  check_for_old_orders_first: Number,
  admin_pass: String,
  code_pass: String,
  likes_shaking: Number,
  changing_driver: Number,
  send_report: Number,
  total_time_allowed: Number,
  old_order_time: Number,
  check_if_order_is_too_old: Number,
  store_admin_email2: String,
  store_admin_email3: String,
  notify_manager_driver_doodle: Number,
  recipient_details: Number,
  tauber_entp: String,
  tauber_store_name: String,
  default_prefix: String,
  check_if_order_is_too_young: Number,
  ask_about_payment: Number,
  barcode_minimum: Number,
  disallow_missing_boxes: Number,
  barcode_style: String,
  email_driver_picture_to_admin: Number,
  check_similar_address: Number,
  country: String,
  show_camera_button_when_driving: Number,
  young_order_time: Number,
  bad_area_lat: Number,
  bad_area_lon: Number,
  returnToStoreIsPartOfOptimization: Number,
  distance_to_bad: Number,
  check_orders_not_other_drivers_assign: Number,
  dont_email_if_not_found: Number,
  disallow_dashes_in_address: Number,
  check_similar_street: Number,
  sms_on_route_start: Number,
  check_orders_not_empty_assign: Number,
  smsOnRouteStartGiveTime: Number,
  force_scanning_at_delivery: Number,
  driver_doodle_time: Number,
  driver_idle_time: String,
  email_admin_collection: Number,
  notify_manager_shutoff: Number,
  searchby_sub: Number,
  strict_box_scan_in: Number,
  hide_creation_times: Number,
  text_to_email: Number,
  red_time: Number,
  columns: Array,
  sign_in_notes: Number,
  always_picture: Number,
  speak_langauge: Number,
  announce_balances: Number,
  announce_boxes: Number,
  sms_company: Number,
  dont_announce_scanovate: Number,
  caller_id_not_forwarding: Number,
  start_closest_to_store: Number,
  notify_only_if_sent_picture: Number,
  Goog: String,
  csv_upload_allowed: Number,
  call_not_sms_on_success: Number,
  days_in_past_to_import: Number,
  super_strict_gps_check: Number,
  hide_barcode_from_label: Boolean,
  driver_gps_locator_allowed: Boolean,
  not_scan_override: Number,
  text_back_asap_message: String,
  help_asap: Number,
  show_city_on_label: Number,
  delivery_success_cell2only: Number,
  option_timeframe: Number,
  option_waiting_for_delivery: Boolean,
  ommit_thanks_for_choosing: Number,
  display_city_in_app: Number,
  ommit_box_count: Number,
  custom_pickup_text: String,
  store_type: Number,
  sensitive_actions_require_pass: Number,
  picture_on_all_required: Number,
  truck_on_wheels: Number,
});
module.exports = mongoose.model("store", storeSchema);
